Webpack 的安装
这节课主要讲解了webpack的安装： 
  1）首先要安装node：要使用webpack，首页要安装nodejs，因为webpack是基于node开发的 
  2）如何查看node、npm是否安装成功：node -v;npm -v;
  3) 用npm init初始化项目：因为webpack是基于node的，所以项目首先要符合node的规范，用npm init进行初始化 
  4）全局安装的方式：npm install webpack webpack-cli -g。查看是否安装成功，webpack -v;全局安装有个缺陷，如果电脑上有2个项目，使用的是不同版本的webpack进行打包的，全局安装就不能同时满足2个项目的需求。
  5）局部安装：局部安装需要先进入项目，使用npm install webpack webpack-cli --save-dev ;这样可以避免全局安装的缺陷，此时查看是否安装成功，不能使用webpack -v ;而要使用npx webpack -v 
  6）局部安装的另外一种方式，指定版本号进行安装：npm install webpack@版本号 webpack-cli.


  命令的一些简写:npm init -y;可以不用一路回车，直接生成默认的；
  npm install webpack webpack-cli -D,替代npm install webpack webpack-cli --save-dev

------------------------------------------------------------------------------------------

webpack在打包的时候，他并不知道自己如何打包，需要配置文件来辅助他。但是一开始我们并没有写这个配置文件，是因为即使我们不写这个配置文件，webpack默认也会有一套自己的默认配置。
想自己配置打包的文件，就要自己创建webpack.config.js的文件

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist'),
  }
}

entry是项目打包的入口文件。
打包出来的，要运行的文件放在output的配置项里面进行配置。 path是使用绝对路径。如果不写path这一项，项目默认也会生成dist

在package.json的scripts的标签里面的命令，会先去本地工程的node_modules里面找，变相npx了

这节课讲的主要内容： 
  1）webpack的配置文件：webpack.config.js。entry：指定入口文件，output指定打包后文件的位置及如何命名。这个时候需要写绝对路径，绝对路径需要使用到node里的path。打包命令npx webpack 
  2）假如修改了webpack.config.js的名字怎么打包：npx webpack --config webpackconfig.js 
  3) 做了优化处理，将js文件都放到一个src目录下面去了
  4）使用package.json里的script项来配置打包的命令 
  5）webpack-cli与webpack的关系：安装了webpack-cli是为了使用webpack的命令 
  6）需要学习的内容：getting start下面的内容可以阅读


------------------------------------------------------------------------------------------

注意 Loader